#include <iostream>
#include <vector>

using namespace std;

template <typename T>

class Stack
{
    private:
        vector<T> v;

    public:
        bool Empty()
        {
            return v.empty();
        }

        void push(const T &elem)
        {
            v.push_back(elem);
        }

        void pop()
        {
            if (v.empty()==0)
                v.pop_back();
            else
                cout<<"\nStiva este goala!";
        }

        T& top()
        {
            if (v.empty()==0)
                return v.back();
            else
                cout<<"\nStiva este goala!";
        }

        void afisare()
        {
            int i;
            for(i=v.size()-1;i>=0;i--)
            {
                cout<<v.at(i)<<endl;
            }
        }
};

int main()
{
    Stack <int> s;

    if(s.Empty()==1) cout<<"Stiva este goala!";
    else cout<<"Stiva nu este goala!";

    cout<<"\nSe adauga in stiva elementele: 10, 4, 1, -2\n";
    s.push(10);
    s.push(4);
    s.push(1);
    s.push(-2);
    s.afisare();

    cout<<"\nVarful stivei este: ";
    cout<<s.top();

    cout<<"\n\nSe elimina ultimul element din stiva:\n";
    s.pop();
    s.afisare();
    if(s.Empty()==1) cout<<"Stiva este goala!";
    else cout<<"Stiva nu este goala!";

    cout<<"\n\nSe elimina ultimul element din stiva:\n";
    s.pop();
    s.afisare();
    if(s.Empty()==1) cout<<"Stiva este goala!";
    else cout<<"Stiva nu este goala!";

    cout<<"\n\nSe elimina ultimul element din stiva:\n";
    s.pop();
    s.afisare();
    if(s.Empty()==1) cout<<"Stiva este goala!";
    else cout<<"Stiva nu este goala!";

    cout<<"\n\nSe elimina ultimul element din stiva:\n";
    s.pop();
    if(s.Empty()==1) cout<<"Stiva este goala!";
    else cout<<"Stiva nu este goala!";

    return 0;
}
